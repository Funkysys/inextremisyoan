# GitHub Action for Symfony with MySQL
name: Testing Symfony with MySQL
on: [push, pull_request]
jobs:
  symfony:
    name: Symfony (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: test_database
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: admin
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql
          coverage: xdebug

      - name: Start mysql service
        run: sudo systemctl start mysql

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run Migration
        run: |
          php bin/console doctrine:database:create || echo "No migrations found or schema update failed"
          php bin/console doctrine:database:create --env=test|| echo "No migrations found or schema update failed"
          php bin/console doctrine:migrations:migrate 'DoctrineMigrations\Version20220326185500'|| echo "No migrations found or migration failed"
          php bin/console doctrine:migrations:migrate 'DoctrineMigrations\Version20220326185500' --env=test|| echo "No migrations found or migration failed"
          php bin/console doctrine:fixtures:load --env=test --append
        env:
          DATABASE_URL: mysql://u737804456_aadelbos:Flora1608@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/u737804456_main

      - name: Install PHPUnit
        run: simple-phpunit install

      - name: Run tests
        run: simple-phpunit --coverage-text
